class Solution {
public:

    int firstOccurence(vector<int>& nums,int target){
        int s = 0;
        int e = nums.size()-1;
        int mid = (e-s)/2 + s;
        int ans = -1;
        while(s<=e){
            if(nums[mid]==target){
                ans = mid;
                e = mid - 1;
            }
            else if(nums[mid]<target){
                s = mid+1;
            }
            else{
                e = mid-1;
            }
            mid = (e-s)/2 + s;
        }
        return ans;
    }
    
   int lastOccurence(vector<int>& nums,int target){
        int s = 0;
        int e = nums.size()-1;
        int mid = (e-s)/2 + s;
        int ans = -1;
        while(s<=e){
            if(nums[mid]==target){
                ans = mid;
                s = mid+1;
            }
            else if(nums[mid]<target){
                s = mid+1;
            }
            else{
                e = mid-1;
            }
            mid = (e-s)/2 + s;
        }
        return ans;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        int first = firstOccurence(nums,target);
        int last = lastOccurence(nums,target);
        ans.push_back(first);
        ans.push_back(last);
        return ans;
    }
};
